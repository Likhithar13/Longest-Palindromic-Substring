int romanCharToInt(char c) { 
    switch (c) {
        case 'I': return 1;
        case 'V': return 5;
        case 'X': return 10;
        case 'L': return 50;
        case 'C': return 100;
        case 'D': return 500;
        case 'M': return 1000;
        default: return 0; // Invalid character (should not occur in valid input)
    }
}

// Function to convert a Roman numeral string to an integer
int romanToInt(char* s) {
    int total = 0;
    int prevValue = 0;

    // Iterate through the string from left to right
    for (int i = 0; s[i] != '\0'; i++) {
        int currentValue = romanCharToInt(s[i]);

        // If the previous value is smaller, subtract it (e.g., IV, IX, etc.)
        if (prevValue < currentValue) {
            total += currentValue - 2 * prevValue;
        } else {
            total += currentValue;
        }

        prevValue = currentValue;
    }

    return total;
}
    
